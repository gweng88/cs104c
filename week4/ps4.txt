Problem Title: Polynomial Inversion

Accepted Languages:

- C++, Java, Python 2.7 and 3.4

Submission:

- Submit a single file containing your solution to the problem. It should
output only the answer requested (NO DEBUG OUTPUT).

Grading:

20% - Code Quality
40% - Big O (efficiency)
40% - Correctness

Description:

Given a polynomial f(x) = a_0 + a_1 x + a_2 x^2 + ... + a_i x^i + ... a_n x^n
and a target value y, find an x such that f(x) = y.

Rules:

Each input file will begin with a number T, the number of test cases.

The first line of each test case will contain two integers n and y. n
represents the order of the polynomial you'll be given and y represents the
value you want p(x) to evaluate to. 

The second line of each test case will have n + 1 integers which are the
coefficients of your polynomial. So for example, 1 0 3 would represent an order
2 polynomial, 1 + 3x^2.

Output:

Print out the value of x that satifies p(x) = y. It is guaranteed that if it
exists, it is unique. If no nonnegative integer x exists, print -1.

Constraints:
0 <= n <= 10^6
0 <= y <= 10^18
0 <= a_i <= 10^6

Input (read from standard in):

3
2 28
1 0 3
4 5
1 1 1 1 1
1 0
1 3

Output (write to standard out):

3
1
-1
